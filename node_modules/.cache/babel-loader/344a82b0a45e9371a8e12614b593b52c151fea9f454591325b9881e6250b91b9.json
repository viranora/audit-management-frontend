{"ast":null,"code":"var _jsxFileName = \"/Users/sema/Desktop/project/frontend/src/pages/RefreshToken.jsx\",\n  _s = $RefreshSig$();\n// src/pages/RefreshToken.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RefreshToken = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleRefresh = () => {\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (refreshToken) {\n      localStorage.setItem('token', 'new-mock-token');\n      setMessage('Token başarıyla yenilendi');\n      console.log('Log: Token yenilendi (TR)');\n    } else {\n      setMessage('Refresh token bulunamadı');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Token Yenile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      className: \"w-full bg-green-600 text-white p-2 rounded\",\n      children: \"Yenile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-blue-600\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(RefreshToken, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = RefreshToken;\nexport default RefreshToken;\nvar _c;\n$RefreshReg$(_c, \"RefreshToken\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RefreshToken","_s","message","setMessage","handleRefresh","refreshToken","localStorage","getItem","setItem","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sema/Desktop/project/frontend/src/pages/RefreshToken.jsx"],"sourcesContent":["// src/pages/RefreshToken.jsx\nimport React, { useState } from 'react'\n\nconst RefreshToken = () => {\n  const [message, setMessage] = useState('')\n\n  const handleRefresh = () => {\n    const refreshToken = localStorage.getItem('refreshToken')\n    if (refreshToken) {\n      localStorage.setItem('token', 'new-mock-token')\n      setMessage('Token başarıyla yenilendi')\n      console.log('Log: Token yenilendi (TR)')\n    } else {\n      setMessage('Refresh token bulunamadı')\n    }\n  }\n\n  return (\n    <div className=\"p-6 max-w-md mx-auto\">\n      <h2 className=\"text-xl font-bold mb-4\">Token Yenile</h2>\n      <button onClick={handleRefresh} className=\"w-full bg-green-600 text-white p-2 rounded\">Yenile</button>\n      {message && <p className=\"mt-4 text-blue-600\">{message}</p>}\n    </div>\n  )\n}\n\nexport default RefreshToken\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,IAAIF,YAAY,EAAE;MAChBC,YAAY,CAACE,OAAO,CAAC,OAAO,EAAE,gBAAgB,CAAC;MAC/CL,UAAU,CAAC,2BAA2B,CAAC;MACvCM,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,MAAM;MACLP,UAAU,CAAC,0BAA0B,CAAC;IACxC;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKY,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCb,OAAA;MAAIY,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDjB,OAAA;MAAQkB,OAAO,EAAEb,aAAc;MAACO,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrGd,OAAO,iBAAIH,OAAA;MAAGY,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAEV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAAAf,EAAA,CArBKD,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAuBlB,eAAeA,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}