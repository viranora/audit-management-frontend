{"ast":null,"code":"export const validatePassword = password => {\n  if (!password || password.length < 8) {\n    return {\n      hasError: true,\n      message: 'Parola en az 8 karakter olmalı'\n    };\n  }\n  const hasSequentialNumbers = /\\d{3}/.test(password);\n  const hasSequentialLetters = /[a-zA-Z]{3}/.test(password);\n  if (hasSequentialNumbers || hasSequentialLetters) {\n    return {\n      hasError: true,\n      message: 'Parola ardışık 3 harf veya rakam içermemeli'\n    };\n  }\n  return {\n    hasError: false\n  };\n};","map":{"version":3,"names":["validatePassword","password","length","hasError","message","hasSequentialNumbers","test","hasSequentialLetters"],"sources":["/Users/sema/Desktop/project/frontend/src/utils/validators.js"],"sourcesContent":["export const validatePassword = password => {\n  if (!password || password.length < 8) {\n    return { hasError: true, message: 'Parola en az 8 karakter olmalı' }\n  }\n  const hasSequentialNumbers = /\\d{3}/.test(password)\n  const hasSequentialLetters = /[a-zA-Z]{3}/.test(password)\n  if (hasSequentialNumbers || hasSequentialLetters) {\n    return { hasError: true, message: 'Parola ardışık 3 harf veya rakam içermemeli' }\n  }\n  return { hasError: false }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAGC,QAAQ,IAAI;EAC1C,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;IACpC,OAAO;MAAEC,QAAQ,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAiC,CAAC;EACtE;EACA,MAAMC,oBAAoB,GAAG,OAAO,CAACC,IAAI,CAACL,QAAQ,CAAC;EACnD,MAAMM,oBAAoB,GAAG,aAAa,CAACD,IAAI,CAACL,QAAQ,CAAC;EACzD,IAAII,oBAAoB,IAAIE,oBAAoB,EAAE;IAChD,OAAO;MAAEJ,QAAQ,EAAE,IAAI;MAAEC,OAAO,EAAE;IAA8C,CAAC;EACnF;EACA,OAAO;IAAED,QAAQ,EAAE;EAAM,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}