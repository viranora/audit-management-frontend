{"ast":null,"code":"var _jsxFileName = \"/Users/sema/Desktop/project/frontend/src/pages/RefreshToken.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from '../components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RefreshToken = ({\n  onClose\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleRefresh = () => {\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (refreshToken) {\n      localStorage.setItem('token', 'new-mock-token');\n      setMessage('Token başarıyla yenilendi');\n      console.log('Log: Token yenilendi (TR)');\n    } else {\n      setMessage('Refresh token bulunamadı');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"\\uD83D\\uDD01 Token Yenile\",\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      className: \"w-full bg-green-600 text-white p-2 rounded\",\n      children: \"Yenile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-blue-600\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(RefreshToken, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = RefreshToken;\nexport default RefreshToken;\nvar _c;\n$RefreshReg$(_c, \"RefreshToken\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","RefreshToken","onClose","_s","message","setMessage","handleRefresh","refreshToken","localStorage","getItem","setItem","console","log","title","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sema/Desktop/project/frontend/src/pages/RefreshToken.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Modal from '../components/Modal'\n\nconst RefreshToken = ({ onClose }) => {\n  const [message, setMessage] = useState('')\n\n  const handleRefresh = () => {\n    const refreshToken = localStorage.getItem('refreshToken')\n    if (refreshToken) {\n      localStorage.setItem('token', 'new-mock-token')\n      setMessage('Token başarıyla yenilendi')\n      console.log('Log: Token yenilendi (TR)')\n    } else {\n      setMessage('Refresh token bulunamadı')\n    }\n  }\n\n  return (\n    <Modal title=\"🔁 Token Yenile\" onClose={onClose}>\n      <button onClick={handleRefresh} className=\"w-full bg-green-600 text-white p-2 rounded\">Yenile</button>\n      {message && <p className=\"mt-4 text-blue-600\">{message}</p>}\n    </Modal>\n  )\n}\n\nexport default RefreshToken\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,IAAIF,YAAY,EAAE;MAChBC,YAAY,CAACE,OAAO,CAAC,OAAO,EAAE,gBAAgB,CAAC;MAC/CL,UAAU,CAAC,2BAA2B,CAAC;MACvCM,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,MAAM;MACLP,UAAU,CAAC,0BAA0B,CAAC;IACxC;EACF,CAAC;EAED,oBACEL,OAAA,CAACF,KAAK;IAACe,KAAK,EAAC,2BAAiB;IAACX,OAAO,EAAEA,OAAQ;IAAAY,QAAA,gBAC9Cd,OAAA;MAAQe,OAAO,EAAET,aAAc;MAACU,SAAS,EAAC,4CAA4C;MAAAF,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrGhB,OAAO,iBAAIJ,OAAA;MAAGgB,SAAS,EAAC,oBAAoB;MAAAF,QAAA,EAAEV;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEZ,CAAC;AAAAjB,EAAA,CApBKF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAsBlB,eAAeA,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}